name: Docker

on:
  workflow_call:
  workflow_dispatch:
  # Prime cache
  schedule:
    - cron: '0 0 * * 1,5'

jobs:
  docker:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: amd64
          - os: ubuntu-22.04-arm
            platform: arm64
    runs-on: ${{matrix.os}}
    timeout-minutes: 180
    concurrency:
      group: ${{matrix.os}}-docker
      cancel-in-progress: true
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          sudo add-apt-repository ppa:flatpak/stable
          sudo apt-get update
          sudo apt update && sudo apt install -y \
            --no-install-recommends flatpak dbus-daemon git python3 \
            ostree
          flatpak remote-add --user --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
          flatpak install --user -y flathub org.flatpak.Builder

      - name: Allow file:// clones with git>=2.38.1
        run: |
          git config --global protocol.file.allow always

      - name: Prepare manifest
        run: |
          cd docker
          rm -rf org.flatpak.Builder/
          git clone --depth=1 --branch master --recursive --single-branch https://github.com/flathub/org.flatpak.Builder.git
          cp -vf flatpak-builder-lint-deps.json org.flatpak.Builder/
          python3 rewrite-manifest.py

      - name: Prepare for hashing
        run: |
          flatpak run org.flatpak.Builder --show-manifest --show-manifest \
            docker/org.flatpak.Builder/org.flatpak.Builder.json >> docker/org.flatpak.Builder/org.flatpak.Builder-cache.json

      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/docker-cache/.flatpak-builder
          key: ${{ runner.os }}-${{ matrix.platform }}-docker-flatpak-builder-${{ hashFiles('docker/org.flatpak.Builder/org.flatpak.Builder-cache.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.platform }}-docker-flatpak-builder-

      - name: Set Flatpak arch
        run: |
          if [ "${{ matrix.platform }}" = "amd64" ]; then
            echo "FP_ARCH=x86_64" >> $GITHUB_ENV
          elif [ "${{ matrix.platform }}" = "arm64" ]; then
            echo "FP_ARCH=aarch64" >> $GITHUB_ENV
          else
            echo "Unsupported platform: ${{ matrix.platform }}"
            exit 1
          fi

      - name: Build flatpak-builder-lint
        run: |
          cd docker/org.flatpak.Builder/
          dbus-run-session flatpak run org.flatpak.Builder \
            --state-dir="$GITHUB_WORKSPACE/docker-cache/.flatpak-builder" \
            --arch=${{ env.FP_ARCH }} --verbose --user \
            --force-clean --ccache --install-deps-from=flathub \
            builddir org.flatpak.Builder.json
          rm -rf "builddir/files/lib/debug"

      - name: Build the base image
        uses: docker/build-push-action@v6
        with:
          context: docker
          file: docker/Dockerfile
          platforms: linux/${{ matrix.platform }}
          push: false
          provenance: false
          load: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}-${{ matrix.platform }}
            ghcr.io/${{ github.repository }}:latest-${{ matrix.platform }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=ssh://git@github.com:${{ github.repository }}.git
            org.opencontainers.image.url=https://github.com/${{ github.repository }}

      - name: Run a sanity check
        run: |
          cd tests/repo/min_success_metadata/gui-app
          dbus-run-session flatpak run org.flatpak.Builder --verbose --user --force-clean --repo=repo \
            --arch=${{ env.FP_ARCH }} \
            --mirror-screenshots-url=https://dl.flathub.org/media \
            --install-deps-from=flathub --ccache builddir org.flathub.gui.yaml
          mkdir -p builddir/files/share/app-info/media
          ostree commit --repo=repo --canonical-permissions --branch=screenshots/${{ env.FP_ARCH }} builddir/files/share/app-info/media
          docker run -v $(pwd):/mnt --rm ghcr.io/${{ github.repository }}:latest-${{ matrix.platform }} manifest /mnt/org.flathub.gui.yaml
          docker run -v $(pwd):/mnt --rm ghcr.io/${{ github.repository }}:latest-${{ matrix.platform }} repo /mnt/repo

      - name: Push the images
        uses: docker/build-push-action@v6
        if: success() && github.event_name != 'pull_request'
        with:
          context: docker
          file: docker/Dockerfile
          platforms: linux/${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          provenance: false
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}-${{ matrix.platform }}
            ghcr.io/${{ github.repository }}:latest-${{ matrix.platform }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=ssh://git@github.com:${{ github.repository }}.git
            org.opencontainers.image.url=https://github.com/${{ github.repository }}

      - name: Login to ghcr.io using Flathub credentials
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request' && github.repository == 'flathub-infra/flatpak-builder-lint'
        with:
          registry: ghcr.io
          username: ${{ secrets.FLATHUB_ORG_USER }}
          password: ${{ secrets.FLATHUB_ORG_TOKEN }}

      - name: Build and push Docker image to the old location
        uses: docker/build-push-action@v6
        if: success() && github.event_name != 'pull_request' && github.repository == 'flathub-infra/flatpak-builder-lint'
        with:
          context: docker
          file: docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          provenance: false
          tags: |
            ghcr.io/flathub/flatpak-builder-lint:${{ github.sha }}-${{ matrix.platform }}
            ghcr.io/flathub/flatpak-builder-lint:latest-${{ matrix.platform }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=ssh://git@github.com:${{ github.repository }}.git
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  docker-manifest:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs:
      - docker
    concurrency:
      group: docker_manifest
      cancel-in-progress: true
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          docker manifest create \
            ghcr.io/${{ github.repository }}:${{ github.sha }} \
            --amend ghcr.io/${{ github.repository }}:${{ github.sha }}-amd64 \
            --amend ghcr.io/${{ github.repository }}:${{ github.sha }}-arm64

          docker manifest push ghcr.io/${{ github.repository }}:${{ github.sha }}

          docker manifest create \
            ghcr.io/${{ github.repository }}:latest \
            --amend ghcr.io/${{ github.repository }}:${{ github.sha }}-amd64 \
            --amend ghcr.io/${{ github.repository }}:${{ github.sha }}-arm64

          docker manifest push ghcr.io/${{ github.repository }}:latest

      - name: Login to ghcr.io using Flathub credentials
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request' && github.repository == 'flathub-infra/flatpak-builder-lint'
        with:
          registry: ghcr.io
          username: ${{ secrets.FLATHUB_ORG_USER }}
          password: ${{ secrets.FLATHUB_ORG_TOKEN }}

      - name: Push manifest to the old location
        if: github.event_name != 'pull_request' && github.repository == 'flathub-infra/flatpak-builder-lint'
        run: |
          docker manifest create \
            ghcr.io/flathub/flatpak-builder-lint:${{ github.sha }} \
            --amend ghcr.io/flathub-infra/flatpak-builder-lint:${{ github.sha }}-amd64 \
            --amend ghcr.io/flathub-infra/flatpak-builder-lint:${{ github.sha }}-arm64

          docker manifest push ghcr.io/flathub/flatpak-builder-lint:${{ github.sha }}

          docker manifest create \
            ghcr.io/flathub/flatpak-builder-lint:latest \
            --amend ghcr.io/flathub-infra/flatpak-builder-lint:${{ github.sha }}-amd64 \
            --amend ghcr.io/flathub-infra/flatpak-builder-lint:${{ github.sha }}-arm64

          docker manifest push ghcr.io/flathub/flatpak-builder-lint:latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the unprivileged image
        uses: docker/build-push-action@v6
        with:
          context: docker
          file: docker/Dockerfile.unprivileged
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          no-cache: true
          build-args: |
            GITHUB_REPOSITORY=${{ github.repository }}
            VERSION=${{ github.sha }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}-unprivileged
            ghcr.io/${{ github.repository }}:unprivileged
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=ssh://git@github.com:${{ github.repository }}.git
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
